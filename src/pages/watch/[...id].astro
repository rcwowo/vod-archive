---
import ChatReplay from '@/components/chat-replay/ChatReplay.tsx'
import { buttonVariants } from '@/components/ui/button'
import MinimalLayout from '@/layouts/MinimalLayout.astro'
import { getYouTubeVideoID } from '@/lib/utils'
import { Icon } from 'astro-icon/components'
import Image from 'astro/components/Image.astro'
import { getCollection, type CollectionEntry } from 'astro:content'

export async function getStaticPaths() {
  const vods: CollectionEntry<'vods'>[] = await getCollection('vods')
  return vods.map((vod) => ({
    params: { id: vod.id },
    props: { vod },
  }))
}

const { vod } = Astro.props
const youtubeId = getYouTubeVideoID(vod.data['VOD URL'])
---

<MinimalLayout
  title={vod.data['Title']}
  description={`Stream VOD: ${vod.data['Title']}`}
  image={vod.data['Thumbnail URL']}
>
  <main class="flex h-screen flex-col">
    <!-- Top Navigation Bar -->
    <div class="flex items-center justify-between border-b p-4">
      <button
        class={buttonVariants({ variant: 'outline' })}
        onclick="(function(){try{if(window.history.length>1){window.history.back()}else{window.location.href='/'}}catch(e){window.location.href='/'}})()"
      >
        <Icon name="lucide:chevron-left" class="md:mr-2" />
        <span class="hidden md:inline">Go Back</span>
      </button>
      <div class="flex items-center gap-4 text-right">
        <div class="max-w-[70vw]">
          <h1 class="truncate text-lg font-semibold">{vod.data['Title']}</h1>
          <p class="truncate text-sm text-muted-foreground">
            {vod.data['Game']} â€¢ {
              vod.data['Stream Date'].toLocaleString('en-US', {
                month: 'long',
                day: 'numeric',
                year: 'numeric',
              })
            }
          </p>
        </div>
        <Image
          src={vod.data['Game Cover URL']}
          alt={`Game cover for ${vod.data['Game']}`}
          width={32}
          height={32}
          class="hidden h-12 w-9 md:block"
        />
      </div>
    </div>

    <!-- Content Area -->
    <div class="relative flex flex-1 flex-col overflow-hidden md:flex-row">
      <!-- Video Player -->
      <div class="relative flex-1">
        <div class="relative h-full w-full">
          {
            vod.data['Chat Replay URL'] ? (
              <div
                id={`youtube-player-${youtubeId}`}
                class="absolute left-0 top-0 h-full w-full"
              />
            ) : (
              <iframe
                class="absolute left-0 top-0 h-full w-full"
                src={`https://www.youtube.com/embed/${youtubeId}?enablejsapi=1&origin=${Astro.url.origin}&autoplay=1`}
                allow="autoplay; encrypted-media; picture-in-picture"
                allowfullscreen
              ></iframe>
            )
          }
        </div>
      </div>

      <!-- Chat Replay -->
      {
        vod.data['Chat Replay URL'] && (
          <div class="h-[60vh] overflow-hidden border-t bg-muted/30 md:h-auto md:w-80 md:border-l md:border-t-0">
            <ChatReplay
              client:load
              chatReplayURL={vod.data['Chat Replay URL']}
              youtubeId={youtubeId}
            />
          </div>
        )
      }
    </div>
  </main>
</MinimalLayout>
